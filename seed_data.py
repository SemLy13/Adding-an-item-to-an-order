#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
import asyncio
from decimal import Decimal
from datetime import datetime, timezone

from sqlalchemy import text
from app.db.database import AsyncSessionLocal
from app.models import Category, Nomenclature, Client, Order, OrderItem


async def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü"""
    async with AsyncSessionLocal() as session:
        try:
            # 1. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            print("–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π...")
            
            # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–µ—Ä–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è
            electronics = Category(name="–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞")
            clothing = Category(name="–û–¥–µ–∂–¥–∞")
            books = Category(name="–ö–Ω–∏–≥–∏")
            
            session.add_all([electronics, clothing, books])
            await session.flush()  # –ü–æ–ª—É—á–∞–µ–º ID
            
            # –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            phones = Category(name="–¢–µ–ª–µ—Ñ–æ–Ω—ã", parent_id=electronics.id)
            laptops = Category(name="–ù–æ—É—Ç–±—É–∫–∏", parent_id=electronics.id)
            shirts = Category(name="–†—É–±–∞—à–∫–∏", parent_id=clothing.id)
            pants = Category(name="–ë—Ä—é–∫–∏", parent_id=clothing.id)
            fiction = Category(name="–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", parent_id=books.id)
            tech_books = Category(name="–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", parent_id=books.id)
            
            session.add_all([phones, laptops, shirts, pants, fiction, tech_books])
            await session.flush()
            
            # 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤
            print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤...")
            
            nomenclature_items = [
                # –≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞
                Nomenclature(
                    name="iPhone 15",
                    quantity=10,
                    price=Decimal("999.99"),
                    category_id=phones.id,
                    top_category_id=electronics.id
                ),
                Nomenclature(
                    name="Samsung Galaxy S24",
                    quantity=15,
                    price=Decimal("899.99"),
                    category_id=phones.id,
                    top_category_id=electronics.id
                ),
                Nomenclature(
                    name="MacBook Pro M3",
                    quantity=5,
                    price=Decimal("2499.99"),
                    category_id=laptops.id,
                    top_category_id=electronics.id
                ),
                Nomenclature(
                    name="Dell XPS 13",
                    quantity=8,
                    price=Decimal("1299.99"),
                    category_id=laptops.id,
                    top_category_id=electronics.id
                ),
                
                # –û–¥–µ–∂–¥–∞
                Nomenclature(
                    name="–ë–µ–ª–∞—è —Ä—É–±–∞—à–∫–∞",
                    quantity=25,
                    price=Decimal("49.99"),
                    category_id=shirts.id,
                    top_category_id=clothing.id
                ),
                Nomenclature(
                    name="–°–∏–Ω–∏–µ –¥–∂–∏–Ω—Å—ã",
                    quantity=20,
                    price=Decimal("79.99"),
                    category_id=pants.id,
                    top_category_id=clothing.id
                ),
                
                # –ö–Ω–∏–≥–∏
                Nomenclature(
                    name="1984 - –î–∂–æ—Ä–¥–∂ –û—Ä—É—ç–ª–ª",
                    quantity=30,
                    price=Decimal("12.99"),
                    category_id=fiction.id,
                    top_category_id=books.id
                ),
                Nomenclature(
                    name="Python –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö",
                    quantity=40,
                    price=Decimal("29.99"),
                    category_id=tech_books.id,
                    top_category_id=books.id
                ),
            ]
            
            session.add_all(nomenclature_items)
            await session.flush()
            
            # 3. –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤
            print("–°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤...")
            
            clients = [
                Client(name="–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤", address="—É–ª. –õ–µ–Ω–∏–Ω–∞, 10, –ú–æ—Å–∫–≤–∞"),
                Client(name="–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", address="–ø—Ä. –ü–æ–±–µ–¥—ã, 25, –°–ü–±"),
                Client(name="–ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤", address="—É–ª. –ú–∏—Ä–∞, 5, –ö–∞–∑–∞–Ω—å"),
                Client(name="–ï–ª–µ–Ω–∞ –í–æ–ª–∫–æ–≤–∞", address="—É–ª. –°–∞–¥–æ–≤–∞—è, 15, –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥"),
                Client(name="–î–º–∏—Ç—Ä–∏–π –°–æ–∫–æ–ª–æ–≤", address="–ø—Ä. –ì–∞–≥–∞—Ä–∏–Ω–∞, 30, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫"),
            ]
            
            session.add_all(clients)
            await session.flush()
            
            # 4. –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤
            print("–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤...")
            
            now = datetime.now(timezone.utc)
            
            orders = [
                Order(
                    client_id=clients[0].id,
                    total_amount=Decimal("0.00"),
                    created_at=now
                ),
                Order(
                    client_id=clients[1].id,
                    total_amount=Decimal("0.00"),
                    created_at=now
                ),
                Order(
                    client_id=clients[2].id,
                    total_amount=Decimal("0.00"),
                    created_at=now
                ),
            ]
            
            session.add_all(orders)
            await session.flush()
            
            # 5. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤
            print("–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤...")
            
            order_items = [
                # –ó–∞–∫–∞–∑ 1 - –ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤
                OrderItem(
                    order_id=orders[0].id,
                    nomenclature_id=nomenclature_items[0].id,  # iPhone 15
                    quantity=1,
                    price=Decimal("999.99"),
                    total_price=Decimal("999.99")
                ),
                OrderItem(
                    order_id=orders[0].id,
                    nomenclature_id=nomenclature_items[4].id,  # –ë–µ–ª–∞—è —Ä—É–±–∞—à–∫–∞
                    quantity=2,
                    price=Decimal("49.99"),
                    total_price=Decimal("99.98")
                ),
                
                # –ó–∞–∫–∞–∑ 2 - –ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞
                OrderItem(
                    order_id=orders[1].id,
                    nomenclature_id=nomenclature_items[2].id,  # MacBook Pro
                    quantity=1,
                    price=Decimal("2499.99"),
                    total_price=Decimal("2499.99")
                ),
                OrderItem(
                    order_id=orders[1].id,
                    nomenclature_id=nomenclature_items[6].id,  # 1984
                    quantity=3,
                    price=Decimal("12.99"),
                    total_price=Decimal("38.97")
                ),
                
                # –ó–∞–∫–∞–∑ 3 - –ê–ª–µ–∫—Å–µ–π –ö–æ–∑–ª–æ–≤
                OrderItem(
                    order_id=orders[2].id,
                    nomenclature_id=nomenclature_items[1].id,  # Samsung Galaxy
                    quantity=1,
                    price=Decimal("899.99"),
                    total_price=Decimal("899.99")
                ),
                OrderItem(
                    order_id=orders[2].id,
                    nomenclature_id=nomenclature_items[5].id,  # –î–∂–∏–Ω—Å—ã
                    quantity=1,
                    price=Decimal("79.99"),
                    total_price=Decimal("79.99")
                ),
                OrderItem(
                    order_id=orders[2].id,
                    nomenclature_id=nomenclature_items[7].id,  # Python –∫–Ω–∏–≥–∞
                    quantity=2,
                    price=Decimal("29.99"),
                    total_price=Decimal("59.98")
                ),
            ]
            
            session.add_all(order_items)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É–º–º—ã –∑–∞–∫–∞–∑–æ–≤
            for order in orders:
                order_items_for_order = [item for item in order_items if item.order_id == order.id]
                order.total_amount = sum(item.total_price for item in order_items_for_order)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤
            for item in order_items:
                nomenclature = next(n for n in nomenclature_items if n.id == item.nomenclature_id)
                nomenclature.quantity -= item.quantity
            
            await session.commit()
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
            
            # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
            categories_count = await session.scalar(
                text('SELECT COUNT(*) FROM categories')
            )
            nomenclature_count = await session.scalar(
                text('SELECT COUNT(*) FROM nomenclature')
            )
            clients_count = await session.scalar(
                text('SELECT COUNT(*) FROM clients')
            )
            orders_count = await session.scalar(
                text('SELECT COUNT(*) FROM orders')
            )
            order_items_count = await session.scalar(
                text('SELECT COUNT(*) FROM order_items')
            )
            
            print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏–π: {categories_count}")
            print(f"–¢–æ–≤–∞—Ä–æ–≤: {nomenclature_count}")
            print(f"–ö–ª–∏–µ–Ω—Ç–æ–≤: {clients_count}")
            print(f"–ó–∞–∫–∞–∑–æ–≤: {orders_count}")
            print(f"–ü–æ–∑–∏—Ü–∏–π –∑–∞–∫–∞–∑–æ–≤: {order_items_count}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
            await session.rollback()
            raise


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üå± –ó–∞–ø—É—Å–∫ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    await create_test_data()
    print("üéâ –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")


if __name__ == "__main__":
    asyncio.run(main())
